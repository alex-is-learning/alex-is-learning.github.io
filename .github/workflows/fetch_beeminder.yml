name: Fetch Beeminder Data

on:
  schedule:
    # Runs every 6 hours. Adjust the cron schedule as you see fit.
    # Example: '0 */6 * * *' (at minute 0 past every 6th hour)
    # Example: '0 8 * * *' (at 08:00 UTC every day)
    - cron: '0 */6 * * *'
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab

jobs:
  fetch-data:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Essential: Allows the Action to commit changes back to your repository

    steps:
      - name: Check out repository
        uses: actions/checkout@v4 # Or a more recent version if available

      - name: Set up Python
        uses: actions/setup-python@v5 # Or a more recent version
        with:
          python-version: '3.10' # Specify a Python version, e.g., 3.9, 3.10, 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Fetch Beeminder data
        env:
          BEEMINDER_AUTH_TOKEN: ${{ secrets.BEEMINDER_AUTH_TOKEN }} # This injects your GitHub Secret
        run: python .github/scripts/fetch_beeminder_data.py # Path to your Python script

      - name: Commit and push if data changed
        env:
          OUTPUT_FILE: assets/data/beeminder_goals_data.json # Path to the JSON file your Python script creates
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add ${{ env.OUTPUT_FILE }}
          # Check if there are changes to commit
          if ! git diff --staged --quiet; then
            git commit -m "Automated: Update Beeminder goals data"
            git push
          else
            echo "No changes to Beeminder data file."