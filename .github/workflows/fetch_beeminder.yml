name: Fetch Beeminder Data

on:
  schedule:
    # Runs every 24 hours at 00:00 UTC.
    # To run daily at 00:00 UTC: '0 0 * * *'
    - cron: '0 0 * * *'
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab

jobs:
  fetch-data:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Essential: Allows the Action to commit changes back to your repository
      
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # Or '3.9', '3.11', etc.

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Fetch Beeminder data
        env:
          BEEMINDER_AUTH_TOKEN: ${{ secrets.BEEMINDER_AUTH_TOKEN }}
        run: python .github/scripts/fetch_beeminder_data.py # Path to your Python script

      - name: Commit and push if data changed
        env:
          OUTPUT_FILE: assets/data/beeminder_goals_data.json # Path to the JSON file
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add ${{ env.OUTPUT_FILE }}
          # Check if there are changes to commit to prevent empty commits
          if ! git diff --staged --quiet; then
            git commit -m "Automated: Update Beeminder goals data"
            git push
          else
            echo "No changes to Beeminder data file."
          fi