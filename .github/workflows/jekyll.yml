# .github/workflows/jekyll.yml

name: Build and Deploy Jekyll Site to GitHub Pages

on:
  push:
    branches:
      - main  # Or your default branch (e.g., master)
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1 # Using an official Ruby action
        with:
          ruby-version: '3.3.8' # Specify your Ruby version (check your Gemfile or .ruby-version file)
                              # Or remove this line to use the Ruby version from your .ruby-version file or Gemfile
          bundler-cache: true # Automatically runs bundle install and caches gems

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        # Outputs the site to '_site'
        run: bundle exec jekyll build --source . --destination ./_site --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
